<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.snb.deal.mapper.plan.PlanInfoMapper">
    <resultMap id="BaseResultMap" type="com.snb.deal.entity.plan.PlanInfoDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="plan_info_id" jdbcType="BIGINT" property="planInfoId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="fund_user_account_id" jdbcType="BIGINT" property="fundUserAccountId"/>
        <result column="third_plan_id" jdbcType="VARCHAR" property="thirdPlanId"/>
        <result column="channel" jdbcType="BIT" property="channel"/>
        <result column="plan_name" jdbcType="VARCHAR" property="planName"/>
        <result column="cycle" jdbcType="BIT" property="cycle"/>
        <result column="cycle_day" jdbcType="TINYINT" property="cycleDay"/>
        <result column="implement" jdbcType="TINYINT" property="implement"/>
        <result column="postpone_deduction" jdbcType="TINYINT" property="postponeDeduction"/>
        <result column="portfolio_amount" jdbcType="DECIMAL" property="portfolioAmount"/>
        <result column="target_amount" jdbcType="DECIMAL" property="targetAmount"/>
        <result column="portfolio_year" jdbcType="INTEGER" property="portfolioYear"/>
        <result column="next_run_date" jdbcType="DATE" property="nextRunDate"/>
        <result column="plan_status" jdbcType="TINYINT" property="planStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="yn" jdbcType="TINYINT" property="yn"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, plan_info_id, user_id, fund_user_account_id, third_plan_id, channel, plan_name, cycle,
        cycle_day, implement, postpone_deduction, portfolio_amount, target_amount, portfolio_year,next_run_date,
        plan_status, create_time, update_time, yn
    </sql>

    <insert id="insert" parameterType="com.snb.deal.entity.plan.PlanInfoDO">
        insert into plan_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="planInfoId != null">
                plan_info_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="fundUserAccountId != null">
                fund_user_account_id,
            </if>
            <if test="thirdPlanId != null">
                third_plan_id,
            </if>
            <if test="channel != null">
                channel,
            </if>
            <if test="planName != null">
                plan_name,
            </if>
            <if test="cycle != null">
                cycle,
            </if>
            <if test="cycleDay != null">
                cycle_day,
            </if>
            <if test="implement != null">
                implement,
            </if>
            <if test="postponeDeduction != null">
                postpone_deduction,
            </if>
            <if test="portfolioAmount != null">
                portfolio_amount,
            </if>
            <if test="targetAmount != null">
                target_amount,
            </if>
            <if test="portfolioYear != null">
                portfolio_year,
            </if>
            <if test="nextRunDate != null">
                next_run_date,
            </if>
            <if test="planStatus != null">
                plan_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="yn != null">
                yn,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="planInfoId != null">
                #{planInfoId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="fundUserAccountId != null">
                #{fundUserAccountId,jdbcType=BIGINT},
            </if>
            <if test="thirdPlanId != null">
                #{thirdPlanId,jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                #{channel,jdbcType=BIT},
            </if>
            <if test="planName != null">
                #{planName,jdbcType=VARCHAR},
            </if>
            <if test="cycle != null">
                #{cycle,jdbcType=BIT},
            </if>
            <if test="cycleDay != null">
                #{cycleDay,jdbcType=TINYINT},
            </if>
            <if test="implement != null">
                #{implement,jdbcType=TINYINT},
            </if>
            <if test="postponeDeduction != null">
                #{postponeDeduction,jdbcType=TINYINT},
            </if>
            <if test="portfolioAmount != null">
                #{portfolioAmount,jdbcType=DECIMAL},
            </if>
            <if test="targetAmount != null">
                #{targetAmount,jdbcType=DECIMAL},
            </if>
            <if test="portfolioYear != null">
                #{portfolioYear,jdbcType=INTEGER},
            </if>
            <if test="nextRunDate != null">
                #{nextRunDate,jdbcType=DATE},
            </if>
            <if test="planStatus != null">
                #{planStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="yn != null">
                #{yn,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <update id="updateThirdPlanId">
        update plan_info
        set third_plan_id = #{thirdPlanId}, plan_status = #{planStatus}
        where plan_info_id = #{planId} and yn=0
    </update>

    <select id="getByPlanInfoId" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from plan_info pi
        where pi.plan_info_id = #{planInfoId}
        and pi.yn = 0
    </select>

    <update id="updatePlanInfo" parameterType="com.snb.deal.entity.plan.PlanInfoDO">

        update plan_info
        <set>
          <if test="cycle != null">
              cycle = #{cycle},
          </if>
            <if test="cycleDay != null">
                cycle_day = #{cycleDay},
            </if>
            <if test="portfolioAmount != null">
                portfolio_amount = #{portfolioAmount},
            </if>
            <if test="thirdPlanId != null">
                third_plan_id = #{thirdPlanId},
            </if>
            <if test="planStatus != null">
                plan_status = #{planStatus},
            </if>
            <if test="nextRunDate != null">
                next_run_date = #{nextRunDate}
            </if>

        </set>

        where plan_info_id = #{planInfoId} and yn=0

    </update>

    <select id="getUserPlanInfoById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_info pi
        where pi.plan_info_id = #{planInfoId} and pi.user_id = #{userId}
        and pi.yn = 0

    </select>

    <update id="updatePlanStatus">
        update plan_info set plan_status = #{planStatus} where plan_info_id =#{planId} and yn=0

    </update>

    <select id="getByThirdPlanId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_info pi
        where pi.third_plan_id = #{thirdPlanId} and pi.channel = #{channel}
        and pi.yn = 0
    </select>

    <select id="listPlanInfo" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM plan_info pi
        WHERE pi.yn = 0 AND pi.user_id = #{userId} AND pi.plan_status!=0 AND pi.plan_status!=4
    </select>

    <update id="updateNextRunDate">
        update plan_info set next_run_date = #{nextRunDate} where plan_info_id =#{planInfoId} and yn=0
    </update>

    <select id="pageAvailablePlanByRunDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM plan_info pi
		 	WHERE pi.next_run_date = #{nextRunDate}
         AND pi.plan_status=1 AND pi.yn = 0 limit #{start},#{end}
    </select>

    <select id="pageAvailablePlanBeforeRunDate" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM plan_info pi
        <![CDATA[
		 	WHERE pi.next_run_date<= #{nextRunDate}
		 ]]>
        AND pi.plan_status=1 AND pi.yn = 0 limit #{start},#{end}
    </select>

    <select id="getSysSuspendPlanInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from plan_info pi
        where pi.user_id = #{userId} and pi.plan_status = 4
        and pi.yn = 0 limit 1
    </select>

    <select id="pagePlanInfo" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM plan_info pi
        WHERE pi.plan_status !=0 AND pi.plan_status !=4  AND pi.yn = 0 limit #{start},#{end}
    </select>

</mapper>